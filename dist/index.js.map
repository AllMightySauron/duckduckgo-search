{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { load } from 'cheerio';\n\nexport interface DuckDuckGoResult {\n  title: string;\n  url: string;\n  description: string;\n}\n\nexport type DuckDuckGoSafeSearch = 'off' | 'moderate' | 'strict';\n\nexport interface DuckDuckGoSearchOptions {\n  /**\n   * Two-letter language-region code (`kl` parameter), e.g. `us-en` or `pt-pt`.\n   * Defaults to DuckDuckGo's auto-detected locale.\n   */\n  locale?: string;\n  /**\n   * When provided, offsets results (`s` parameter). DuckDuckGo expects multiples of 50.\n   */\n  offset?: number;\n  /**\n   * DuckDuckGo safe-search level (`kp` parameter).\n   *\n   * - `off`: disables safe-search (kp=-2)\n   * - `moderate`: default DuckDuckGo behavior (kp=0)\n   * - `strict`: strict filtering (kp=1)\n   */\n  safeSearch?: DuckDuckGoSafeSearch;\n  /**\n   * Maximum amount of results to return. Defaults to 10.\n   */\n  maxResults?: number;\n  /**\n   * Overrides the user-agent header. Defaults to a desktop browser user-agent.\n   */\n  userAgent?: string;\n  /**\n   * Optional AbortSignal for cancelling the underlying fetch call.\n   */\n  signal?: AbortSignal;\n}\n\nexport type DuckDuckGoSearchResult = DuckDuckGoResult[];\n\nconst DUCKDUCKGO_HTML_ENDPOINT = 'https://duckduckgo.com/html/';\nconst DEFAULT_USER_AGENT =\n  'Mozilla/5.0 (Macintosh; Intel Mac OS X 13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36';\n\nconst SAFE_SEARCH_PARAM: Record<DuckDuckGoSafeSearch, string> = {\n  off: '-2',\n  moderate: '0',\n  strict: '1',\n};\n\n/** Maximum number of retries for exponential backoff */\nconst MAX_RETRIES = 5;\n\nexport class DuckDuckGoSearchError extends Error {\n  constructor(\n    message: string,\n    readonly cause?: unknown,\n  ) {\n    super(message);\n    this.name = 'DuckDuckGoSearchError';\n  }\n}\n\n/**\n * Get the exponential backoff delay.\n * @param attempt Attempt number\n * @param baseDelay THe base delay (defaults to 100)\n * @param maxDelay  The maximum delay (defaults to 120_000)\n * @returns The exponential backoff delay\n */\nfunction getExponentialBackoffDelay(\n  attempt: number,\n  baseDelay: number = 100,\n  maxDelay: number = 120_000,\n): number {\n  // Add random jitter between 0 and baseDelay\n  const jitter = Math.random() * baseDelay;\n\n  // Exponential backoff formula\n  const delay = Math.min(baseDelay * Math.pow(2, attempt) + jitter, maxDelay);\n\n  return delay;\n}\n\n/**\n * Performs a DuckDuckGo search by scraping the lite HTML endpoint.\n *\n * @throws {DuckDuckGoSearchError} When the request fails or the response cannot be parsed.\n */\nexport async function searchDuckDuckGo(\n  query: string,\n  options: DuckDuckGoSearchOptions = {},\n): Promise<DuckDuckGoSearchResult> {\n  const trimmedQuery = query.trim();\n\n  if (!trimmedQuery) {\n    throw new DuckDuckGoSearchError('Search query must not be empty');\n  }\n\n  const { userAgent = DEFAULT_USER_AGENT } = options;\n  const maxResults = options.maxResults ?? 10;\n\n  if (maxResults <= 0) {\n    throw new DuckDuckGoSearchError('maxResults must be greater than 0');\n  }\n\n  try {\n    // loop to get result\n    for (let i = 0; i < MAX_RETRIES; i++) {\n      const html = await requestSearchPage(trimmedQuery, options, userAgent);\n\n      // verify challenge\n      if (html.includes('challenge-form')) {\n        await new Promise((resolve) => setTimeout(resolve, getExponentialBackoffDelay(i)));\n\n        continue;\n      }\n\n      return parseResults(html, maxResults);\n    }\n\n    throw new DuckDuckGoSearchError('Max attempts exceeded');\n  } catch (error) {\n    throw new DuckDuckGoSearchError('Failed to search DuckDuckGo', error);\n  }\n}\n\nasync function requestSearchPage(\n  query: string,\n  options: DuckDuckGoSearchOptions,\n  userAgent: string,\n): Promise<string> {\n  const url = buildSearchUrl(query, options);\n  const response = await fetch(url, {\n    headers: {\n      'user-agent': userAgent,\n      accept: 'text/html,application/xhtml+xml',\n    },\n    signal: options.signal,\n  });\n\n  if (!response.ok) {\n    throw new Error(`DuckDuckGo responded with status ${response.status}`);\n  }\n\n  return response.text();\n}\n\nfunction buildSearchUrl(query: string, options: DuckDuckGoSearchOptions): string {\n  const params = new URLSearchParams();\n  params.set('q', query);\n\n  if (options.locale) {\n    params.set('kl', options.locale);\n  }\n\n  if (typeof options.offset === 'number') {\n    params.set('s', Math.max(0, options.offset).toString());\n  }\n\n  if (options.safeSearch) {\n    params.set('kp', SAFE_SEARCH_PARAM[options.safeSearch]);\n  }\n\n  return `${DUCKDUCKGO_HTML_ENDPOINT}?${params.toString()}`;\n}\n\nfunction parseResults(html: string, maxResults: number): DuckDuckGoSearchResult {\n  const $ = load(html);\n  const results: DuckDuckGoResult[] = [];\n\n  $('div.result').each((_, element) => {\n    if (results.length >= maxResults) {\n      return false;\n    }\n\n    const titleAnchor = $('a.result__a', element).first();\n    const descriptionBlock = $('.result__snippet', element).first();\n\n    const href = titleAnchor.attr('href');\n    const title = titleAnchor.text().trim();\n    const description = descriptionBlock.text().trim();\n\n    if (!href || !title) {\n      return;\n    }\n\n    const url = extractUrl(href);\n    if (!url) {\n      return;\n    }\n\n    results.push({ title, url, description });\n  });\n\n  return results;\n}\n\nfunction extractUrl(rawHref: string): string | undefined {\n  try {\n    if (rawHref.startsWith('/')) {\n      const [, queryString] = rawHref.split('?');\n      if (!queryString) {\n        return undefined;\n      }\n\n      const params = new URLSearchParams(queryString);\n      const encodedUrl = params.get('uddg') ?? params.get('rut');\n\n      if (!encodedUrl) {\n        return undefined;\n      }\n\n      return decodeURIComponent(encodedUrl);\n    }\n\n    return rawHref;\n  } catch {\n    return undefined;\n  }\n}\n"]}